name: Kenya GDP App CI/CD

on:
  push:
    branches: [ main, linux-test ]  # Add linux-test
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pytest

  build-and-push-docker:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: riekobrian/kenya-gdp-app:latest  # Docker Hub

  deploy-to-kubernetes:
    needs: build-and-push-docker
    runs-on: ubuntu-latest
    if: github.event_name == 'push'  # Trigger on any push to main or linux-test
    steps:
      - uses: actions/checkout@v3
      - name: Install kubectl
        uses: azure/setup-kubectl@v3
      - name: Configure kubectl
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config
          chmod 600 $HOME/.kube/config
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f kubernetes/deployment.yaml
          kubectl apply -f kubernetes/service.yaml
          kubectl rollout status deployment/kenya-gdp-app
# name: Kenya GDP App CI/CD

# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

# jobs:
#   build-and-test:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
      
#       - name: Set up Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: '3.10'
          
#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install flake8 pytest
#           if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          
#       - name: Lint with flake8
#         run: |
#           # stop the build if there are Python syntax errors or undefined names
#           flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#           # exit-zero treats all errors as warnings
#           flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
          
#       - name: Test with pytest
#         run: |
#           pytest

#   build-and-push-docker:
#     needs: build-and-test
#     runs-on: ubuntu-latest
#     if: github.event_name == 'push'
#     steps:
#       - uses: actions/checkout@v3
      
#       - name: Log in to GitHub Container Registry
#         uses: docker/login-action@v2
#         with:
#           registry: ghcr.io
#           username: ${{ github.actor }}
#           password: ${{ secrets.GITHUB_TOKEN }}
          
#       - name: Build and push Docker image
#         uses: docker/build-push-action@v4
#         with:
#           context: .
#           push: true
#           tags: ghcr.io/${{ github.repository_owner }}/kenya-gdp-app:latest
          
#   deploy-to-kubernetes:
#     needs: build-and-push-docker
#     runs-on: ubuntu-latest
#     if: github.event_name == 'push' && github.ref == 'refs/heads/main'
#     steps:
#       - uses: actions/checkout@v3
      
#       - name: Install kubectl
#         uses: azure/setup-kubectl@v3
        
#       - name: Configure kubectl
#         run: |
#           mkdir -p $HOME/.kube
#           echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config
#           chmod 600 $HOME/.kube/config
          
#       - name: Deploy to Kubernetes
#         run: |
#           kubectl apply -f kubernetes/deployment.yaml
#           kubectl apply -f kubernetes/service.yaml


          